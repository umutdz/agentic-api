services:
  agentic_api_app:
    build:
      context: .
      dockerfile: ./compose/development/Dockerfile.api
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=agentic_api_db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=agentic_api
      - POSTGRES_PASSWORD=agentic_api
      - POSTGRES_DB=agentic_api
    depends_on:
      - agentic_api_db
    volumes:
      - ./app:/app/app
      - ./migrations:/app/migrations
      - ./alembic.ini:/app/alembic.ini
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    networks:
      - agentic_api_network

  agentic_api_db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=agentic_api
      - POSTGRES_PASSWORD=agentic_api
      - POSTGRES_DB=agentic_api
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agentic_api -d agentic_api"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agentic_api_network

  agentic_api_redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agentic_api_network

  agentic_api_celery_worker:
    build:
      context: .
      dockerfile: ./compose/development/Dockerfile.celery
    command: celery -A app.workers.celery_config.celery_app worker --loglevel=INFO --queues=$QUEUE_NAME -n agentic-ai-worker@%n
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=agentic_api_db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=agentic_api
      - POSTGRES_PASSWORD=agentic_api
      - POSTGRES_DB=agentic_api
      - RABBITMQ_HOST=agentic_api_rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - agentic_api_rabbitmq
      - agentic_api_db
    networks:
      - agentic_api_network

  agentic_api_rabbitmq:
    image: rabbitmq:management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    networks:
      - agentic_api_network

  agentic_api_celery_flower:
    build:
      context: .
      dockerfile: ./compose/development/Dockerfile.flower
    command: celery flower --broker=${FLOWER_BROKER_URL}
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=agentic_api_db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=agentic_api
      - POSTGRES_PASSWORD=agentic_api
      - POSTGRES_DB=agentic_api
      - RABBITMQ_HOST=agentic_api_rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - agentic_api_celery_worker
      - agentic_api_db
    networks:
      - agentic_api_network

  agentic_api_pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - "${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}"
    depends_on:
      - agentic_api_db
    networks:
      - agentic_api_network

  agentic_api_mongodb:
    image: mongo:7.0
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - ./data/mongodb:/data/db
    networks:
      - agentic_api_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 5

  agentic_api_mongo_express:
    image: mongo-express:1.0.2-20
    restart: always
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@agentic_api_mongodb:${MONGO_PORT}/
    networks:
      - agentic_api_network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  agentic_api_network:
    driver: bridge
